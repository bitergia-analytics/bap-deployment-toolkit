---

# SortingHat image and container
sortinghat_docker_image: bitergia/bitergia-analytics-sortinghat
sortinghat_version: 0.31.0
sortinghat_docker_container: bap_sortinghat

# SortingHat node configuration
sortinghat_workdir: "/docker/sortinghat"
keys_dir:  "{{ sortinghat_workdir }}/keys"
gcp_service_account_file: "{{ keys_dir }}/credentials.json"

# SortingHat uWSGI workers and threads
sortinghat_uwsgi_workers: "1"
sortinghat_uwsgi_threads: "4"

# SortingHat network
server_name: sortinghat
network:
  bind_host: 0.0.0.0
  publish_host: "{{ ansible_default_ipv4.address }}"

# Create your instances configurations
## instances:
## - project: example
##   tenant: example
##   public: false
##   sortinghat:
##     tenant: example
##     dedicated_queue: true
##     openinfra_client_id: ""
##     openinfra_client_secret: ""
##   nginx:
##     fqdn: example.com
##     http_rest_api: true
## - project: example-public
##   tenant: example-public
##   public: true
##   sortinghat:
##     tenant: example-public
##     dedicated_queue: false
##   nginx:
##     fqdn: example-public.com
##     http_rest_api: false

# Multi tenant
sortinghat_multi_tenant: "true"
sortinghat_multi_tenant_list_path: "{{ sortinghat_workdir }}/sortinghat_multi_tenant_list_path.json"

# Database
sortinghat_database: sortinghat_db

mariadb_hosts: "{{ groups['all_in_one'][0] | default(groups['mariadb'][0]) }}"
redis_database: "0"
redis_hosts: "{{ groups['all_in_one'][0] | default(groups['redis'][0]) }}"


# Debug mode (on: 'true', '1'; off: 'false', '0')
sortinghat_debug: "false"

# CSRF and CORS configuration
sortinghat_allowed_hosts: "localhost,{{ groups['sortinghat'][0] }},{{ groups['mordred'] | join(',') }}"
sortinghat_cors_allowed_origins_regexes: "https://localhost,https://{{ groups['sortinghat'][0] }},https://{{ groups['mordred'] | join(',https://') }}"

# NGINX

sortinghat_host: "{{ inventory_hostname }}:9314"
sortinghat_max_conns: 75

## Image and container
nginx_docker_image: nginx
nginx_version: stable
nginx_docker_container: nginx

## Node configuration
nginx_workdir: /docker/nginx
nginx_virtualhosts_workdir: "{{ nginx_workdir }}/conf"

## Enable SSL
enable_ssl: False

## Certificates configuration. Only used if SSL is enabled
certs_dir: "{{ nginx_workdir }}/certs"

## Uncomment to define custom certificates. Otherwise self-signed
## certificates will be used. Only needed if SSL is enabled
# custom_cert:
#   cert: foo/cert.crt
#   key: foo/cert.key

docker_network_name: bap_network
docker_log_max_size: 500m
