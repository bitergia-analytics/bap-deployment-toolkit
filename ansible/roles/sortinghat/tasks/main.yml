---

- name: "Create SortingHat tenants info"
  set_fact:
    tenants_info: |-
      [
      {% for item in instances %}
        {{ "" if loop.first else "," }}
        {
          "tenant": "{{ item.sortinghat.tenant | replace('-','_') }}",
          "dedicated_queue": {{ item.sortinghat.dedicated_queue | default(false) }},
          "openinfra_client_id": "{{ item.sortinghat.openinfra_client_id | default("") }}",
          "openinfra_client_secret": "{{ item.sortinghat.openinfra_client_secret | default("") }}"
        }
      {% endfor %}
      ]

- name: Filter out duplicated entries of tenants info
  set_fact:
    tenants: |-
      {{
        tenants_info
        | json_query('[].{
          "tenant": tenant,
          "dedicated_queue": dedicated_queue,
          "openinfra_client_id": openinfra_client_id,
          "openinfra_client_secret": openinfra_client_secret
          }')
       | unique
      }}

- name: Check multi-tenancy configuration
  assert:
    that:
      - "{{ tenants|length }} | int == 1"
    fail_msg: "Multi-tenancy is deactivated but multiple configurations were found."
  when:
    - sortinghat_multi_tenant is undefined or sortinghat_multi_tenant == "false"

- name: Create a list of databases
  set_fact:
    databases: |-
      [
      {% for item in tenants %}
        {{ "" if loop.first else "," }}
        "{{ item.tenant | replace('-','_') }}"
      {% endfor %}
      ]

- name: Remove duplicate entries in databases
  set_fact:
    databases: "{{ databases | unique }}"

- name: Check databases list
  debug:
    msg: "{{ databases }}"

- name: Create a list of privileges
  set_fact:
    privileges: |-
      {
      {% for item in databases %}
        "{{ item }}.*":"ALL,GRANT",
      {% endfor %}
        "{{ sortinghat_database | replace('-','_') }}.*":"ALL,GRANT"
      }

- name: Check privileges list
  debug:
    msg: "{{ privileges }}"

- name: Create databases
  mysql_db:
    name: "{{ item }}"
    collation: utf8mb4_unicode_ci
    encoding: utf8mb4
    state: present
    login_user: root
    login_password: "{{ mariadb_root_password }}"
  delegate_to: "{{ groups['mariadb'][0] }}"
  loop: "{{ databases }}"
  when: sortinghat_multi_tenant is defined and sortinghat_multi_tenant == "true"

- name: Create MariaDB service account for SortingHat
  mysql_user:
    name: "{{ mariadb_service_account }}"
    host: "{{ ansible_default_ipv4.address }}"
    password: "{{ mariadb_service_account_password }}"
    priv: "{{ privileges }}"
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    login_host: "{{ item }}"
    state: present
  register: result
  retries: 2
  delay: 5
  until: result is success
  with_items:
    - "{{ mariadb_hosts }}"

- name: Create SortingHat directory credentials for GCP
  file:
    path: "{{ keys_dir }}"
    state: directory
    mode: 0750
    recurse: true

- name: Copy GCP service account file
  copy:
    src: "{{ gcp_service_account_host_file }}"
    dest: "{{ gcp_service_account_file }}"
    mode: 0644

- name: "Create SortingHat multi tenant file"
  copy:
    dest: "{{ sortinghat_multi_tenant_list_path }}"
    mode: 0644
    content: |-
      {
        "tenants": [
          {% for item in tenants %}
            {{ "" if loop.first else "," }}
            {
               "name": "{{ item.tenant }}",
               "dedicated_queue": {{ item.dedicated_queue }}
            }
          {% endfor %}
        ]
      }

- name: Remove old SortingHat container
  docker_container:
    name: "{{ sortinghat_docker_container }}"
    state: absent

- name: Add sortinghat_allowed_hosts
  set_fact:
    sortinghat_allowed_hosts: "{{ sortinghat_allowed_hosts + ',' + item.nginx.fqdn }}"
  loop: "{{ instances }}"

- name: Check sortinghat_allowed_hosts list
  debug:
    msg: "{{ sortinghat_allowed_hosts }}"

- name: Add sortinghat_cors_allowed_origins
  set_fact:
    sortinghat_cors_allowed_origins: "{{ sortinghat_cors_allowed_origins + ',' + 'https://'+item.nginx.fqdn }}"
  loop: "{{ instances }}"

- name: Check sortinghat_cors_allowed_origins list
  debug:
    msg: "{{ sortinghat_cors_allowed_origins }}"

- name: Start SortingHat container
  docker_container:
    name: "{{ sortinghat_docker_container }}"
    image: "{{ sortinghat_docker_image }}:{{ sortinghat_version }}"
    pull: yes
    command: --upgrade
    env:
      SORTINGHAT_DEBUG: "{{ sortinghat_debug }}"
      SORTINGHAT_CONFIG: sortinghat.config.settings_bap
      SORTINGHAT_SECRET_KEY: "{{ sortinghat_secret_key }}"
      SORTINGHAT_DB_HOST: "{{ mariadb_hosts }}"
      SORTINGHAT_DB_USER: "{{ mariadb_service_account }}"
      SORTINGHAT_DB_PASSWORD: "{{ mariadb_service_account_password }}"
      SORTINGHAT_DB_DATABASE: "{{ sortinghat_database | replace('-','_') }}"
      SORTINGHAT_REDIS_HOST: "{{ redis_hosts }}"
      SORTINGHAT_REDIS_PASSWORD: "{{ redis_password }}"
      SORTINGHAT_REDIS_DB: "{{ redis_database }}"
      SORTINGHAT_SUPERUSER_USERNAME: "{{ sortinghat_superuser_name }}"
      SORTINGHAT_SUPERUSER_PASSWORD: "{{ sortinghat_superuser_password }}"
      SORTINGHAT_ALLOWED_HOST: "{{ sortinghat_allowed_hosts }}"
      SORTINGHAT_CORS_ALLOWED_ORIGINS: "{{ sortinghat_cors_allowed_origins }}"
      SORTINGHAT_STATICFILES_STORAGE: "{{ sortinghat_bucket_provider }}"
      SORTINGHAT_BUCKET_NAME: "{{ sortinghat_assets_bucket }}"
      SORTINGHAT_MULTI_TENANT: "{{ sortinghat_multi_tenant }}"
      SORTINGHAT_MULTI_TENANT_LIST_PATH: "{{ sortinghat_multi_tenant_list_path }}"
      GOOGLE_APPLICATION_CREDENTIALS: /home/sortinghat/gcp_credentials.json
      SORTINGHAT_UWSGI_WORKERS: "{{ sortinghat_uwsgi_workers }}"
      SORTINGHAT_UWSGI_THREADS: "{{ sortinghat_uwsgi_threads }}"
    volumes:
      - "{{ gcp_service_account_file }}:/home/sortinghat/gcp_credentials.json:ro"
      - "{{ sortinghat_multi_tenant_list_path }}:{{ sortinghat_multi_tenant_list_path }}"
    ports:
      - "{{ network.bind_host }}:9314:9314"

- name: "Add {{ sortinghat_superuser_name }} user to all tenants for {{ ansible_hostname }}"
  command: >
    docker exec {{ sortinghat_docker_container }} /opt/venv/bin/sortinghat-admin set-user-tenant {{ sortinghat_superuser_name }} {{ item }} {{ item }}
  loop: "{{ databases }}"
  when: sortinghat_multi_tenant is defined and sortinghat_multi_tenant == "true"

- name: To create a user use this command
  debug:
    msg: >
      docker exec -e SORTINGHAT_USER_USERNAME=<username> -e SORTINGHAT_USER_PASSWORD=<password>
      {{ sortinghat_docker_container }} /opt/venv/bin/sortinghat-admin create-user --no-interactive

- name: To assign a user to a tenant use this command
  debug:
    msg: >
      docker exec {{ sortinghat_docker_container }} /opt/venv/bin/sortinghat-admin set-user-tenant
      <username> <tenant> <tenant>
  when: sortinghat_multi_tenant is defined and sortinghat_multi_tenant == "true"

- name: Configure Nginx
  include_tasks: nginx.yml
