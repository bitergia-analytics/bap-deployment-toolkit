---

- name: Create a list of databases
  set_fact:
    databases: |-
      [
      {% for item in instances %}
        {{ "" if loop.first else "," }}
        "{{ item.sortinghat.tenant | replace('-','_') }}"
      {% endfor %}
      ]

- name: Check databases list
  debug:
    msg: "{{ databases }}"

- name: Create a list of privileges
  set_fact:
    privileges: |-
      {
      {% for item in databases %}
        "{{ item }}.*":"ALL,GRANT",
      {% endfor %}
        "{{ sortinghat_database | replace('-','_') }}.*":"ALL,GRANT"
      }

- name: Check privileges list
  debug:
    msg: "{{ privileges }}"

- name: Create MariaDB service account for SortingHat worker
  mysql_user:
    name: "{{ mariadb_service_account }}"
    host: "{{ ansible_default_ipv4.address }}"
    password: "{{ mariadb_service_account_password }}"
    priv: "{{ privileges }}"
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    login_host: "{{ item }}"
    state: present
  register: result
  retries: 2
  delay: 5
  until: result is success
  with_items:
    - "{{ mariadb_hosts }}"

- name: Create SortingHat Worker directory
  file:
    path: "{{ sortinghat_worker_workdir }}"
    state: directory
    mode: 0750
    recurse: true

- name: "Create SortingHat multi tenant file"
  copy:
    dest: "{{ sortinghat_multi_tenant_list_path }}"
    mode: 0644
    content: |-
      {
        "tenants": [
          {% for item in instances %}
            {{ "" if loop.first else "," }}
            {
               "name": "{{ item.sortinghat.tenant }}",
               "dedicated_queue": {{ item.sortinghat.dedicated_queue | default(false) }}
            }
          {% endfor %}
        ]
      }

- name: Remove old SortingHat worker container
  docker_container:
    name: "{{ sortinghat_worker_docker_container }}-{{ item }}"
    state: absent
  with_sequence: start=1 end="{{ sortinghat_workers }}"

- name: Start SortingHat worker container
  docker_container:
    name: "{{ sortinghat_worker_docker_container }}-{{ item }}"
    image: "{{ sortinghat_worker_docker_image }}:{{ sortinghat_worker_version }}"
    pull: yes
    env:
      SORTINGHAT_CONFIG: sortinghat.config.settings
      SORTINGHAT_SECRET_KEY: "{{ sortinghat_secret_key }}"
      SORTINGHAT_DB_HOST: "{{ mariadb_hosts }}"
      SORTINGHAT_DB_USER: "{{ mariadb_service_account }}"
      SORTINGHAT_DB_PASSWORD: "{{ mariadb_service_account_password }}"
      SORTINGHAT_DB_DATABASE: "{{ sortinghat_database | replace('-','_') }}"
      SORTINGHAT_REDIS_HOST: "{{ redis_hosts }}"
      SORTINGHAT_REDIS_PASSWORD: "{{ redis_password }}"
      SORTINGHAT_REDIS_DB: "{{ redis_database }}"
      SORTINGHAT_MULTI_TENANT: "{{ sortinghat_multi_tenant }}"
      SORTINGHAT_MULTI_TENANT_LIST_PATH: "{{ sortinghat_multi_tenant_list_path }}"
    volumes:
      - "{{ sortinghat_multi_tenant_list_path }}:{{ sortinghat_multi_tenant_list_path }}"
  with_sequence: start=1 end="{{ sortinghat_workers }}"

- name: "Remove old SortingHat dedicated workers {{ item.sortinghat.tenant }}"
  docker_container:
    name: "{{ sortinghat_worker_docker_container }}-{{ item.sortinghat.tenant }}"
    state: absent
  loop: "{{ instances }}"
  when:
    - sortinghat_multi_tenant is defined
    - sortinghat_multi_tenant == "true"
    - item.sortinghat.dedicated_queue is defined
    - item.sortinghat.dedicated_queue == true

- name: "Start SortingHat dedicated worker {{ item.sortinghat.tenant }}"
  docker_container:
    name: "{{ sortinghat_worker_docker_container }}-{{ item.sortinghat.tenant }}"
    image: "{{ sortinghat_worker_docker_image }}:{{ sortinghat_worker_version }}"
    pull: yes
    command: "{{ item.sortinghat.tenant }}"
    env:
      SORTINGHAT_CONFIG: sortinghat.config.settings
      SORTINGHAT_SECRET_KEY: "{{ sortinghat_secret_key }}"
      SORTINGHAT_DB_HOST: "{{ mariadb_hosts }}"
      SORTINGHAT_DB_USER: "{{ mariadb_service_account }}"
      SORTINGHAT_DB_PASSWORD: "{{ mariadb_service_account_password }}"
      SORTINGHAT_DB_DATABASE: "{{ sortinghat_database | replace('-','_') }}"
      SORTINGHAT_REDIS_HOST: "{{ redis_hosts }}"
      SORTINGHAT_REDIS_PASSWORD: "{{ redis_password }}"
      SORTINGHAT_REDIS_DB: "{{ redis_database }}"
      SORTINGHAT_OPENINFRA_CLIENT_ID: "{{ item.sortinghat.openinfra_client_id | default('') }}"
      SORTINGHAT_OPENINFRA_CLIENT_SECRET: "{{ item.sortinghat.openinfra_client_secret | default('') }}"
      SORTINGHAT_MULTI_TENANT: "{{ sortinghat_multi_tenant }}"
      SORTINGHAT_MULTI_TENANT_LIST_PATH: "{{ sortinghat_multi_tenant_list_path }}"
    volumes:
      - "{{ sortinghat_multi_tenant_list_path }}:{{ sortinghat_multi_tenant_list_path }}"
  loop: "{{ instances }}"
  when:
    - sortinghat_multi_tenant is defined
    - sortinghat_multi_tenant == "true"
    - item.sortinghat.dedicated_queue is defined
    - item.sortinghat.dedicated_queue == true
