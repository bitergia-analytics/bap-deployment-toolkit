---
# OpenSearch image and container
opensearch_docker_image: bitergia/bitergia-analytics-opensearch
opensearch_version: 0.31.2
opensearch_docker_container: bap_opensearch

# OpenSearch node configuration
opensearch_volume: opensearch-data
opensearch_workdir: "/docker/opensearch"
opensearch_logs_dir: "{{ opensearch_workdir }}/log"
opensearch_cluster_manager_heap_size: 512m
opensearch_cluster_data_heap_size: 512m
node_name: "{{ inventory_hostname }}"
network:
  bind_host: 0.0.0.0
  publish_host: "{{ ansible_default_ipv4.address }}"

# OpenSearch cluster configuration
opensearch_cluster_name: bap-opensearch
cluster_name: "{{ opensearch_cluster_prefix }}-{{ opensearch_cluster_name }}"
cluster_initial_manager_nodes: "{{ groups['opensearch_manager'] | join(',') }}"
opensearch_data_nodes: "{{ groups['opensearch_data'] | join(',') }}"
discovery_seed_hosts:
  "{{ cluster_initial_manager_nodes }},{{ opensearch_data_nodes }}"
multitenancy_enabled: true
do_not_fail_on_forbidden: false
anonymous_auth_enabled: false
opensearch_endpoint: "https://{{ network.publish_host }}:9200"
number_of_shards: "{{ groups['opensearch_data'] | length }}"
auto_expand_replicas: "0-1"

# Certificates files and their DNs
certs_dir: "{{ opensearch_workdir }}/certs"
certs_files:
  ca_cert: root-ca.pem
  admin_cert: admin.pem
  admin_key: admin-key.pem
  node_cert: node-0.pem
  node_key: node-0-key.pem
certs_dn:
  admin_cert: "CN=admin,O=Dis,L=All,ST=Any,C=EU"
  node_cert: "CN=opensearch,O=Dis,L=All,ST=Any,C=EU"

## OpenID
#
# OpenID configuration requires of all these parameters
# than can be either set here or as in the environment
# vars file.
# openid:
#   connect_url: "https://accounts.google.com/.well-known/openid-configuration"
#   subject_key: email
#   admins:
#     users:
#       - johnsmith@example.com
#       - janerae@example.com
#

# Snapshots
opensearch_base_path: opensearch
# Set in your environments vars.yml copying the name of the bucket created by terraform
#backups_assets_bucket: bap-opensearch-snapshots-<XXXXXXXX>
opensearch_snapshots_repo_type: gcs
opensearch_snapshots_repository: os_backups
opensearch_snapshots_url: https://localhost:9200
opensearch_snapshots_index_list:
  - "*"

## Restore snapshot
# Uncomment this section to restore indices from a snapshot or set in your environments vars.yml.
# Remember to remove or comment this section after the snapshot is restored.
#restore_snapshot:
#  bucket: <BUCKET-NAME>
#  base_path: <BUCKET-BASE-PATH>
#  repository: <SNAPSHOT-REPOSITORY>
#  name: <SNAPSHOT-NAME>
#  index_list: "-.opendistro_security,-security-auditlog*,-.kibana_1"

## Crontab
opensearch_snapshots_cronjob: true
opensearch_snapshots_cronjob_time:
  hour: "6"
  minute: "0"
  weekday: "*"
opensearch_snapshots_script: /usr/local/bin/make_snapshot.sh
opensearch_snapshots_json_file: "{{ opensearch_workdir }}/snapshot.json"

# Audit Log
opensearch_auditlog_enabled: true
opensearch_auditlog_ingore_users: ["kibanaserver"]
opensearch_auditlog_ignore_requests: ["/_mget*", "/_plugins*", "/_template", "/_search", "/_mapping*", "/_cat*", "/_alias*", "/_cluster*", "/.kibana/_search", "/.kibana/_doc/config*", "/_resolve*"]
opensearch_auditlog_disabled_rest_categories: ["GRANTED_PRIVILEGES", "BAD_HEADERS", "FAILED_LOGIN", "MISSING_PRIVILEGES", "SSL_EXCEPTION"]
opensearch_auditlog_disabled_transport_categories: ["GRANTED_PRIVILEGES", "BAD_HEADERS", "FAILED_LOGIN", "MISSING_PRIVILEGES", "SSL_EXCEPTION", "INDEX_EVENT", "OPENDISTRO_SECURITY_INDEX_ATTEMPT"]
opensearch_auditlog_log_request_body: false
opensearch_auditlog_resolve_indices: false
opensearch_auditlog_resolve_bulk_requests: false
opensearch_auditlog_exclude_sensitive_headers: false
opensearch_auditlog_enable_transport: false
opensearch_auditlog_enable_rest: true
opensearch_auditlog_compliance_enabled: true
opensearch_auditlog_compliance_write_log_diffs: false
opensearch_auditlog_compliance_read_watched_fields: {}
opensearch_auditlog_compliance_write_watched_indices: []
opensearch_auditlog_compliance_read_metadata_only: false
opensearch_auditlog_compliance_opensearch_auditlog_write_metadata_only: true
opensearch_auditlog_compliance_external_config: false
opensearch_auditlog_compliance_internal_config: true

# OpenSearch Security backup
opensearch_security_dir: "{{ opensearch_workdir }}/opensearch-security"
opensearch_security_backup_dir: "{{ opensearch_security_dir }}/backup"
opensearch_security_backup_script: "{{ opensearch_security_dir }}/opensearch_security_backup.sh"
opensearch_security_backup_cronjob_time: "daily" # "annually", "daily", "hourly", "monthly", "reboot", "weekly", "yearly"
## Restore from backup
opensearch_security_backup_restore: false
#opensearch_security_backup_restore_name: opensearch-security-backup_20240701.tgz # opensearch-security-backup_%Y%m%d.tgz

## Google Cloud Credendials
opensearch_keys_dir:  "{{ opensearch_workdir }}/keys"
gcp_service_account_file: "{{ opensearch_keys_dir }}/gcs_credentials.json"
gcs_cred_file_container: "/usr/share/opensearch/config/gcs_credentials.json"

docker_network_name: bap_network
docker_log_max_size: 500m
