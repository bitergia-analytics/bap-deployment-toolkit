---

- name: Remove old NGINX container
  docker_container:
    name: "{{ nginx_docker_container }}"
    state: absent

- name: Create NGINX directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    recurse: true
  with_items:
    - "{{ nginx_certs_dir }}"
    - "{{ nginx_letsencrypt_configdir }}"
    - "{{ nginx_letsencrypt_logsdir }}"
    - "{{ nginx_letsencrypt_webroot_path }}"
    - "{{ nginx_log_dir }}"
    - "{{ nginx_virtualhosts_workdir }}"

- name: Configure NGINX status page
  template:
    src: status.conf.j2
    dest: "{{ nginx_virtualhosts_workdir }}/status.conf"

- name: Configure Google Cloud Storage (GCS)
  include_tasks: gcs.yml

- name: Configure NGINX proxy buffer sizes
  template:
    src: proxy_buffer.conf.j2
    dest: "{{ nginx_virtualhosts_workdir }}/proxy_buffer.conf"
    backup: true

- name: Create docker volumes for certs and config
  set_fact:
    nginx_volumes: |-
      [
        "{{ nginx_certs_dir }}:/etc/ssl/certs/",
        "{{ nginx_letsencrypt_configdir }}:/etc/ssl/certbot_certs/",
        "{{ nginx_letsencrypt_webroot_path }}:/var/www/certbot/:ro",
        "{{ nginx_gcs_workdir }}:/opt/gcs",
        "{{ nginx_log_dir }}:/var/log/nginx",
        "{{ nginx_virtualhosts_workdir}}:/etc/nginx/conf.d/"
      ]

- name: Check the list of volumes
  debug:
    msg: "{{ nginx_volumes }}"

- name: "Create SortingHat uWSGI params configuration file"
  template:
    src: uwsgi_params.j2
    dest: "{{ nginx_virtualhosts_workdir }}/uwsgi_params"
    backup: true

- name: "Configure virtualhost (certbot with acme-challenge) for all instances"
  template:
    src: vhost_port_80.j2
    dest: "{{ nginx_virtualhosts_workdir }}/{{ instance.nginx.fqdn }}.conf"
    backup: true
  loop: "{{ instances }}"
  loop_control:
    loop_var: instance
  when: custom_cert is undefined and instance.nginx is defined

- name: "Configure virtualhost (certbot with acme-challenge) for default host"
  template:
    src: vhost_port_80.j2
    dest: "{{ nginx_virtualhosts_workdir }}/default.conf"
    backup: true
  when: custom_cert is undefined and nginx_default_host is defined

- name: "Create a docker network: {{ docker_network_name }}"
  docker_network:
    name: "{{ docker_network_name }}"

# Start Nginx container to allow certbot to create certificates.
- name: Start NGINX container with acme-challenge to create certificates using certbot
  docker_container:
    name: "{{ nginx_docker_container }}"
    image: "{{ nginx_docker_image }}:{{ nginx_version }}"
    volumes: "{{ nginx_volumes }}"
    ports:
      - "80:80"
      - "443:443"
    exposed_ports:
      - "80"
      - "443"
    log_driver: json-file
    log_options:
      max-size: "{{ docker_log_max_size }}"
  when: custom_cert is undefined

- name: Configure virtualhost(s) for all instances
  include_tasks: virtualhost.yml
  loop: "{{ instances }}"
  loop_control:
    loop_var: instance

- name: Copy the default host configuration files
  copy:
    src: "{{ item }}"
    dest: "{{ nginx_virtualhosts_workdir }}/{{ item }}"
  with_items:
    - bitergia-logo.png
    - custom_404.html
  when: nginx_default_host is defined

- name: Confgure virtualhost for default host
  include_tasks: virtualhost_default.yml
  when: nginx_default_host is defined

- name: Start NGINX container with virtualhost(s)
  docker_container:
    name: "{{ nginx_docker_container }}"
    image: "{{ nginx_docker_image }}:{{ nginx_version }}"
    restart: yes
    volumes: "{{ nginx_volumes }}"
    networks:
      - name: "{{ docker_network_name }}"
        aliases:
          - "{{ nginx_docker_container | replace('_','-') }}"
    ports:
      - "80:80"
      - "443:443"
    exposed_ports:
      - "80"
      - "443"
    log_driver: json-file
    log_options:
      max-size: "{{ docker_log_max_size }}"

- name: Launch first rsync
  shell: gsutil -m rsync -d -r "gs://{{ sortinghat_assets_bucket }}/" "{{ nginx_gcs_workdir }}"
